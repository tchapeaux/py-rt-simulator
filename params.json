{"name":"Py-rt-simulator","tagline":"Real-time System Simulator written in Python, mostly for my own use","body":"PyRTSS\r\n=======\r\n\r\nPython Real-Time System Simulator, developed during my final year of Master to help me with my [Master Thesis](http://www.thomaschapeaux.be/assets/Master_Thesis.pdf) on the integration of preemption costs.\r\n\r\nDependencies\r\n------------\r\n\r\n* GLPK v4.45+, see http://www.gnu.org/software/glpk/ or use the provided installer in /GLPK/\r\n* pycairo module for displaying the simulator result\r\n* matplotlib module in some scripts\r\n\r\nUsage\r\n-----\r\n\r\nSystems can be described in a text file. An example is provided in `/systems/task_example.system`\r\n\r\n* To launch the simulator on a given system: `python3 mainSimu.py -sys path/of/input_file -sched NAME_OF_SCHEDULER`\r\n\r\n* To compare two schedulers on a given number of systems: `python3 mainSimuComp.py`. Parameters:\r\n    + `sched1` : Name of the supposed 'best' schedulers\r\n    + `sched2` : Name of the supposed 'worst' schedulers\r\n    + `writeVict` : Log systems scheduled by 1 but not by 2 (1/0, def: 0)\r\n    + `writeFail` : Log systems scheduled by 2 but not by 1 (1/0, def: 0)\r\n    + `o` : log file (default: \" + outFilePath + \"\r\n    + `p` : pickle file (default: \" + pickFilePath + \"\r\n    + `n` : number of systems per data point (def: 1000)\r\n    + `synchr` : generate synchronous system only (1/0 def: 0)\r\n    + `cdf` : float value of the CDF (0: implicit, 1: fully constrained)\r\n\r\n* To calculate the C-space of a given system: `python3 mainCspace.py path/of/input_file`\r\n\r\n* To launch tests `python3 runtests.py`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}